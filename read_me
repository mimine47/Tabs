# Tabs Interaction Project

This project is a simple implementation of an interactive tabs system using HTML, CSS, and JavaScript. The main purpose is to create a functional tabbed interface that switches content dynamically based on user interaction.

## Features

- **Interactive Tabs**: Clicking on a tab dynamically updates the displayed content.
- **Clean Design**: The UI includes responsive and aesthetically pleasing styling.
- **Beginner-Friendly Code**: Ideal for understanding DOM manipulation and event handling in JavaScript.

## Files

### HTML
The `index.html` file contains the structure of the tab system. Each tab and its corresponding content are marked with `data-tab` attributes to link them.

### CSS
The `style.css` file provides the styling for the tabs and content. Key features include:
- Hover effects on tabs
- Active tab highlighting
- Clean layout with shadows and padding

### JavaScript
The `script.js` file handles the interactivity, including:
1. Selecting all tabs and content sections.
2. Adding event listeners to tabs for click events.
3. Dynamically updating the active tab and content based on user interaction.

## Usage

1. Clone the repository:
   ```bash
   git clone <repository-url>
   ```

2. Navigate to the project folder and open the `index.html` file in your browser.

3. Click on the tabs to see the content update dynamically.

## Code Highlights

### JavaScript Logic
```javascript
const tabs = document.querySelectorAll('.tab'); 
const tabContents = document.querySelectorAll('.tab-content'); 

tabs.forEach(tab => {
    tab.addEventListener('click', () => {
        tabs.forEach(t => t.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));
        
        tab.classList.add('active');
        const activeTab = tab.getAttribute('data-tab');
        const activeContent = document.querySelector(`.tab-content[data-tab="${activeTab}"]`);
        activeContent.classList.add('active');        
    });
});
```
This code dynamically updates the tabs and content by toggling the `active` class.

## Learning Objectives

- Understanding how to structure an HTML document for dynamic behavior.
- Applying CSS for responsive and interactive designs.
- Manipulating the DOM and handling events in JavaScript.

## Future Improvements

- Add animations for smoother transitions between content.
- Make the tabs accessible via keyboard navigation.
- Implement responsiveness for mobile devices.

---
Project URL
GitHub Repository:https://github.com/mimine47/Tabs.git
Project Page:https://roadmap.sh/projects/simple-tabs
Contact
 [my linkedin] (https://www.linkedin.com/in/mohamed-amine-mammar-el-hadj-715a41295)
 [Your GitHub] (https://github.com/mimine47)